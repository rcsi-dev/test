/*
 * secure_uart.h
 *
 *  Created on: Apr 24, 2025
 *      Author: rcsi
 */

#ifndef SECURE_UART_H
#define SECURE_UART_H

#include <stdint.h>
#include <stddef.h>

/* --- compile‑time options ----------------------------------- */
#define SECURE_UART_USE_ENCRYPTION   1   /* 1 = SPECK-CTR on payload */
#define SECURE_UART_CNT_WINDOW       8   /* replay window */

/* --- frame layout constants --------------------------------- */
#define SECURE_UART_SYNC1    0x55U
#define SECURE_UART_SYNC2    0xAAU
#define SECURE_UART_OVERHEAD 16U            /* SYNC(2)+LEN(1)+CNT(1)+CRC(4)+MAC(8) */
#define SECURE_UART_MAX_FRAME   256U
#define SECURE_UART_MAX_PAYLOAD (SECURE_UART_MAX_FRAME - SECURE_UART_OVERHEAD)

/* status codes returned by parser */
typedef enum {
    SECURE_UART_OK = 0,
    SECURE_UART_SYNC_ERR,
    SECURE_UART_LEN_ERR,
    SECURE_UART_CRC_ERR,
    SECURE_UART_MAC_ERR,
    SECURE_UART_REPLAY_ERR
} secure_uart_status_t;

/* user‑supplied 96‑bit key for SPECK (if encryption enabled) */
extern const uint32_t g_speck_key[3];
/* user‑supplied 128‑bit key for SipHash MAC */
extern const uint32_t g_siphash_key[4];

int  secure_uart_build (const uint8_t *payload, uint8_t plen,
                        uint8_t *frame,    uint8_t *flen);
secure_uart_status_t
     secure_uart_parse (uint8_t *frame, uint8_t size,
                        uint8_t *out,   uint8_t *out_len);

#endif /* SECURE_UART_H */
